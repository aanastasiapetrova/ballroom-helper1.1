"""create athletes, judges, coaches tables

Revision ID: 68c97e3857bb
Revises: e65b47e29c6f
Create Date: 2023-12-18 16:44:46.784457

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '68c97e3857bb'
down_revision: Union[str, None] = 'e65b47e29c6f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('athletes',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('class_st', sa.String(length=1), nullable=False),
    sa.Column('class_lat', sa.String(length=1), nullable=False),
    sa.Column('assignment_class_st_date', sa.Date(), nullable=True),
    sa.Column('assignment_class_lat_date', sa.Date(), nullable=True),
    sa.Column('st_base_scores', sa.Integer(), nullable=True),
    sa.Column('st_qualification_scores', sa.Integer(), nullable=True),
    sa.Column('lat_base_scores', sa.Integer(), nullable=True),
    sa.Column('lat_qualification_scores', sa.Integer(), nullable=True),
    sa.Column('qualification_book_id', sa.BigInteger(), nullable=True),
    sa.Column('insurance_id', sa.BigInteger(), nullable=True),
    sa.Column('rusada_certificate_id', sa.BigInteger(), nullable=True),
    sa.Column('sport_category', sa.String(length=100), nullable=True),
    sa.Column('assignment_sport_category_date', sa.Date(), nullable=True),
    sa.Column('sport_category_status', sa.Boolean(), nullable=True),
    sa.Column('person_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('coaches',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('assignment_coach_status_date', sa.Date(), nullable=True),
    sa.Column('person_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('judges',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('has_disciplinary_action', sa.Boolean(), nullable=True),
    sa.Column('fdsarr_judgement_category', sa.String(length=100), nullable=True),
    sa.Column('assignment_fdsarr_category_date', sa.Date(), nullable=True),
    sa.Column('sport_judgement_category', sa.String(length=100), nullable=True),
    sa.Column('assignment_sport_category_date', sa.Date(), nullable=True),
    sa.Column('sport_judgement_category_status', sa.Boolean(), nullable=True),
    sa.Column('person_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_unique_constraint(None, 'clubs', ['id'])
    op.create_unique_constraint(None, 'persons', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'persons', type_='unique')
    op.drop_constraint(None, 'clubs', type_='unique')
    op.drop_table('judges')
    op.drop_table('coaches')
    op.drop_table('athletes')
    # ### end Alembic commands ###
